//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kikisen_VC_WPF.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.3.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string InputDevice {
            get {
                return ((string)(this["InputDevice"]));
            }
            set {
                this["InputDevice"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string OutputDevice {
            get {
                return ((string)(this["OutputDevice"]));
            }
            set {
                this["OutputDevice"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string RecogAPI {
            get {
                return ((string)(this["RecogAPI"]));
            }
            set {
                this["RecogAPI"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SpeechAPI {
            get {
                return ((string)(this["SpeechAPI"]));
            }
            set {
                this["SpeechAPI"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string TranslateAPI {
            get {
                return ((string)(this["TranslateAPI"]));
            }
            set {
                this["TranslateAPI"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string TranslateSetting {
            get {
                return ((string)(this["TranslateSetting"]));
            }
            set {
                this["TranslateSetting"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("テスト|テストちゅう|こんにちは|Hi|よろしく|よろ|OK|了解|わかった|ラジャー|Yes|NG|拒否する|いやだ|ノー|無理だ|ありがとう|あざっす|ごめん" +
            "|ごめんなさい|すまない|おめ|おめでとう|おつ|お疲れ|ワラタ|笑った|お願い|頼む|やった|おおっと|ウプシー|エヌピー|問題ない|うわ|グッドゲーム|ジー" +
            "ジー|うるさい|まちがえた|割れてる|たすけて|ヘルプ|なおしてください|治療して|ほしい|ください|逃げろ|隠れろ|走れ|はやく|いそげ|ゆっくり|ゆっくり|" +
            "しゃがめ|伏せろ|さがれ|あがれ|もうない|まだある|まだ|ある|ない|こっち来た|来て|ついて来て|待って|待ってくれ|wait|進もう|ゴーゴー|行こう|集" +
            "合|集まれ|解散|散れ|移動|移動する|待ち伏せ|邪魔|どいて|見る|見てくる|居る|居ない|見える|見えない|聞こえる|聞こえない|動く|動ける|行く|向かう" +
            "|今行く|はいって|乗って|はいった|乗った|動かない|動けない|見つけた|見つからない|どこですか？|登る|おりる|さがる|あがる|あげる|くれる|リロード|" +
            "弾切れ|弾なし|怪我している|怪我|危険|あぶない|やりなおし|すこし|もうすこし|たくさん|ちょっと|ちかい|とおい|遅い|速い|おおきい|デカイ|ちいさい|" +
            "大丈夫|いける|ヤバイ|余裕|そば|すぐそば|かなり|こっち|あっち|だれか|みんな|死んでる|うえ|した|ひだり|みぎ|まえ|前方|正面|うしろ|後方|さき|" +
            "そと|なか|いやな音|警戒|落ち着いて|おと|こえ|音声|壊れた|壊れそう|爆破|設置|ラッシュ|爆発|クリア|ドア|扉|入り口|出口|階段|電柱|いえ|建物|" +
            "一階|ニ階|三階|四階|屋上|地下|窓|A|B|C|D|E|F|G|開始|中止|止まって|中断|ストップ|たおせ|攻撃|まもれ|防御|うて|修理|囲まれている|" +
            "裏を取られた|マップ|地図|コンパス|銃|武器|ピストル|敵|敵兵|歩兵|死体|くるま|トラック|救護|救護車|指揮車|HQ|装甲車|エーピーシー|戦車|ヘリコ" +
            "プター|戦闘ヘリ|飛行機|ボート|船|分隊|分隊規模|対空|対空兵器|マシンガン|機関銃|ライフル|小銃|ショットガン|グレネード|スモーク|ブリーチ|ラペリン" +
            "グ|フラグ|スタン|ドローン|シールド|バリケード|ニトロ|スナイパー|メディック|衛生兵|ビーエムピー|シルカ|ビーティーアール|ビーアールディーエム|ユーエ" +
            "ーゼット|ミリタリーオフロード|ボドニク|ハインド|カモフ|アパッチ|ユーエイチ|エムアイハチ|ゼットユー|エムワンエーワン|エムワンエーツー|ティーナナニー|" +
            "ティーゴーニー|ヤバウラル|ウラル|オスプレー|ストライカー|ハンヴィー|リトルバード|アベンジャー|タイヤ|エーテン|スカッド|ICBM|グリーン|みどり|レ" +
            "ッド|赤|イエロー|黄色|オレンジ|ブルー|青|一人|二人|三人|四人|五人|六人|七人|八人|九人|十人|2|3|5|6|8|9|50|100|200|300" +
            "|400|500|600|700|800|900|メートル|メーター|方向|方角|北|ノース|南|サウス|東|イースト|西|ウエスト|北東|ノースイースト|北西" +
            "|ノースウエスト|南東|サウスイースト|南西|サウスウエスト|一時|二時|三時|四時|五時|六時|七時|八時|九時|十時|十一時|十二時|みちぞい|みちなり|交" +
            "差点|十字路|ティージロ|三叉路|ラウンドアバウト|つきあたり|脇道|迂回|丘|山|林|川|海|木|バス停|坂|敷地内|武器庫|指揮所|通信所|地元民|民間人")]
        public string Phrases {
            get {
                return ((string)(this["Phrases"]));
            }
            set {
                this["Phrases"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string sayVolume {
            get {
                return ((string)(this["sayVolume"]));
            }
            set {
                this["sayVolume"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string sayPitch {
            get {
                return ((string)(this["sayPitch"]));
            }
            set {
                this["sayPitch"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string saySpeed {
            get {
                return ((string)(this["saySpeed"]));
            }
            set {
                this["saySpeed"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string sayEmotion {
            get {
                return ((string)(this["sayEmotion"]));
            }
            set {
                this["sayEmotion"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string keyVTWAPI {
            get {
                return ((string)(this["keyVTWAPI"]));
            }
            set {
                this["keyVTWAPI"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string keyGCSAPIjsonPath {
            get {
                return ((string)(this["keyGCSAPIjsonPath"]));
            }
            set {
                this["keyGCSAPIjsonPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string say_msEmphasis {
            get {
                return ((string)(this["say_msEmphasis"]));
            }
            set {
                this["say_msEmphasis"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string say_msRate {
            get {
                return ((string)(this["say_msRate"]));
            }
            set {
                this["say_msRate"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string say_msPitch {
            get {
                return ((string)(this["say_msPitch"]));
            }
            set {
                this["say_msPitch"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string say_msVolume {
            get {
                return ((string)(this["say_msVolume"]));
            }
            set {
                this["say_msVolume"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool OutputText {
            get {
                return ((bool)(this["OutputText"]));
            }
            set {
                this["OutputText"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool OutputText_opt1 {
            get {
                return ((bool)(this["OutputText_opt1"]));
            }
            set {
                this["OutputText_opt1"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string keyGTAPI {
            get {
                return ((string)(this["keyGTAPI"]));
            }
            set {
                this["keyGTAPI"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string keyBingSpAPI1 {
            get {
                return ((string)(this["keyBingSpAPI1"]));
            }
            set {
                this["keyBingSpAPI1"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool readLogFile {
            get {
                return ((bool)(this["readLogFile"]));
            }
            set {
                this["readLogFile"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string readLogFilePath {
            get {
                return ((string)(this["readLogFilePath"]));
            }
            set {
                this["readLogFilePath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(": ")]
        public string readLogFileExcept {
            get {
                return ((string)(this["readLogFileExcept"]));
            }
            set {
                this["readLogFileExcept"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool readLogFileNicknameChk {
            get {
                return ((bool)(this["readLogFileNicknameChk"]));
            }
            set {
                this["readLogFileNicknameChk"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Global: *:")]
        public string readLogFileNicknameString {
            get {
                return ((string)(this["readLogFileNicknameString"]));
            }
            set {
                this["readLogFileNicknameString"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool readLogFileNicknameChkUseVTWAPI {
            get {
                return ((bool)(this["readLogFileNicknameChkUseVTWAPI"]));
            }
            set {
                this["readLogFileNicknameChkUseVTWAPI"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool readLogFileOCR {
            get {
                return ((bool)(this["readLogFileOCR"]));
            }
            set {
                this["readLogFileOCR"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public double readLogFileOCR_rectdownedX {
            get {
                return ((double)(this["readLogFileOCR_rectdownedX"]));
            }
            set {
                this["readLogFileOCR_rectdownedX"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public double readLogFileOCR_rectdownedY {
            get {
                return ((double)(this["readLogFileOCR_rectdownedY"]));
            }
            set {
                this["readLogFileOCR_rectdownedY"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public double readLogFileOCR_rectwidth {
            get {
                return ((double)(this["readLogFileOCR_rectwidth"]));
            }
            set {
                this["readLogFileOCR_rectwidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public double readLogFileOCR_rectheight {
            get {
                return ((double)(this["readLogFileOCR_rectheight"]));
            }
            set {
                this["readLogFileOCR_rectheight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("テスト[/COM]テスト,テストちゅう[/BR]こんにちは,ちわ[/COM]こんにちは,Hi[/BR]よろしく,よろ[/COM]よろしく,よろ[/BR]はい,りょ" +
            "うかい,イエス,ログ,オーケー[/COM]OK,了解,わかった,ラジャー,Yes,Sure mate,Affirmative[/BR]いいえ,ノー,ちがう,こと" +
            "わる,いらない,エヌジー[/COM]NG,拒否する,嫌だ,ノー,ちが,無理だ[/BR]あり,ありがと,サンクス[/COM]ありがとう,あざっす,Thanks p" +
            "al,Cheers boss[/BR]ごめん,ごめんなさい[/COM]ごめん,ごめんなさい,すまない[/BR]おめ,おめでと[/COM]おめ,おめでとう[/BR" +
            "]おつ,おつかれ,おつかれさま[/COM]おつ,お疲れ[/BR]わらた,わら,ろる[/COM]ワラタ,笑った[/BR]おねがい,たのむ[/COM]お願い,頼む[" +
            "/BR]やった[/COM]やった[/BR]おっと[/COM]おおっと,ウプシー[/BR]えぬぴー,もんだいない[/COM]エヌピー,問題ない[/BR]うわ[/C" +
            "OM]うわー[/BR]ジージー,グッドゲーム[/COM]ッドゲーム,ジージー[/BR]うるさい[/COM]うるさい[/BR]まちがえた,ミス[/COM]まちがえ" +
            "た[/BR]われてる[/COM]割れてる[/BR]たすけて,ヘルプ[/COM]たすけてー,ヘルプ[/BR]なおして,ちりょう[/COM]治してください,治療して" +
            "[/BR]ほしい,ください[/COM]ほしい,ください[/BR]にげろ[/COM]逃げろー[/BR]かくれろ[/COM]隠れろー[/BR]はしれ[/COM]走れ" +
            "ー[/BR]はやく,いそげ[/COM]はやくー,いそげー[/BR]ゆっくり[/COM]ゆっくり,ゆっくり[/BR]しゃがめ[/COM]しゃがめー[/BR]ふせろ" +
            "[/COM]伏せろー[/BR]さがれ[/COM]下がれ―[/BR]あがれ[/COM]上がれー[/BR]もうない[/COM]もう無い[/BR]まだある[/COM]" +
            "まだ有る[/BR]まだ[/COM]まだ[/BR]ある[/COM]有る[/BR]ない[/COM]無い[/BR]こっちきた[/COM]こっち来た[/BR]こい,きて" +
            ",ついてきて[/COM]来て,ついて来て[/BR]まとう,まて,まって[/COM]待って,待ってくれ,wait[/BR]いこう,ゴー,すすむ[/COM]進もう," +
            "ゴーゴー,行こう[/BR]しゅうごう,あつまれ[/COM]集合ー,集まれー[/BR]かいさん,ちれ[/COM]解散ー,散れー[/BR]いどう,いどうする[/CO" +
            "M]移動,移動する[/BR]まちぶせ[/COM]待ち伏せ[/BR]じゃま,どいて[/COM]邪魔,どいて[/BR]みる,みてくる[/COM]見る,見てくる[/B" +
            "R]いる[/COM]居る[/BR]いない[/COM]居ない[/BR]みえる[/COM]見える[/BR]みえない[/COM]見えない[/BR]きこえる[/COM]" +
            "聞こえる[/BR]きこえない[/COM]聞こえない[/BR]うごける,うごく[/COM]動く,動ける[/BR]いく,向かう[/COM]行く,向かう[/BR]いま" +
            "いく[/COM]今行く[/BR]はいれ,はいって[/COM]入って[/BR]のれ,乗って[/COM]乗って[/BR]はいった[/COM]入った[/BR]のった[" +
            "/COM]乗った[/BR]うごけない,うごかない[/COM]動かない,動けない[/BR]みつけた[/COM]見つけた[/BR]みつからない,みつかんない[/CO" +
            "M]見つからない[/BR]どこ[/COM]どこですか？[/BR]のぼる[/COM]登る[/BR]おりる[/COM]降りる[/BR]さがる[/COM]下がる[/B" +
            "R]あがる[/COM]上がる[/BR]あげる[/COM]あげる[/BR]くれる[/COM]くれる[/BR]リロード[/COM]リロード[/BR]たまぎれ,たまな" +
            "し[/COM]弾切れ,弾なし[/BR]けが,けがしてる[/COM]怪我している,怪我[/BR]きけん[/COM]危険[/BR]あぶない[/COM]危ない[/BR" +
            "]やりなおし[/COM]やりなおし[/BR]すこし[/COM]すこし[/BR]もうすこし[/COM]もうすこし[/BR]たくさん[/COM]たくさん[/BRちょ" +
            "っと[/COM]ちょっと[/BR]ちかい[/COM]近い[/BR]とおい[/COM]遠い[/BR]おそい[/COM]遅い[/BR]はやい[/COM]速い[/BR" +
            "]おおきい,でかい[/COM]大きい,デカイ[/BR]ちいさい[/COM]小さい[/BR]だいじょうぶ[/COM]大丈夫[/BR]いける[/COM]いける[/B" +
            "R]やばい[/COM]ヤバイ[/BR]よゆう[/COM]余裕ー[/BR]そば[/COM]そば[/BR]すぐそば[/COM]すぐそば[/BR]かなり[/COM]か" +
            "なり[/BR]こっち[/COM]こっち[/BR]あっち[/COM]あっち[/BR]だれか[/COM]だれか[/BR]みんな[/COM]みんな[/BR]しんでる[" +
            "/COM]死んでる[/BR]うえ[/COM]上[/BR]した[/COM]下[/BR]みぎ[/COM]右[/BR]ひだり[/COM]左[/BR]まえ,ぜんぽう,し" +
            "ょうめん[/COM]前,前方,正面[/BR]うしろ,こうほう[/COM]後ろ,後方[/BR]さき[/COM]先[/BR]そと[/COM]そと[/BR]なか[/C" +
            "OM]なか[/BR]いやなおと[/COM]嫌な音[/BR]警戒[/COM]警戒[/BR]おちつけ,おちついて[/COM]落ち着いて[/BR]おと[/COM]おと" +
            "[/BR]こえ[/COM]声,音声[/BR]こわれた[/COM]壊れた[/BR]こわれそう[/COM]壊れそう[/BR]ばくは[/COM]爆破[/BR]せっち[" +
            "/COM]設置[/BR]ラッシュ[/COM]ラッシュ[/BR]ばくはつ[/COM]爆発[/BR]クリア[/COM]クリア[/BR]ドア,とびら,いりぐち[/CO" +
            "M]ドア,扉,入り口[/BR]でぐち[/COM]出口[/BR]かいだん[/COM]階段[/BR]でんちゅう[/COM]電柱[/BR]いえ[/COM]家[/BR]" +
            "たてもの[/COM]建物[/BR]いっかい[/COM]一階[/BR]にかい[/COM]ニ階[/BR]さんかい[/COM]三階[/BR]よんかい[/COM]四階[" +
            "/BR]おくじょう[/COM]屋上[/BR]ちか[/COM]地下[/BR]まど[/COM]窓[/BR]エー[/COM]A[/BR]ビー[/COM]B[/BR]シ" +
            "ー[/COM]C[/BR]ディー,デー[/COM]D[/BR]イー[/COM]E[/BR]エフ[/COM]F[/BR]ジー[/COM]G[/BR]かいし[/CO" +
            "M]開始[/BR]ちゅうし[/COM]中止[/BR]とまれ,とまって[/COM]止まって[/BR]ちゅうだん,ストップ[/COM]中断,ストップ[/BR]たおせ" +
            ",こうげき[/COM]倒せ,攻撃[/BR]まもれ,ぼうぎょ[/COM]守れ,防御[/BR]うて[/COM]撃て[/BR]しゅうり[/COM]修理[/BR]かこま" +
            "れ,かこまれてる[/COM]囲まれている[/BR]うらとり,うらとられた[/COM]裏を取られた[/BR]マップ,ちず[/COM]マップ,地図[/BR]コンパス" +
            "[/COM]コンパス[/BR]じゅう,ぶき[/COM]銃,武器[/BR]ぴすとる[/COM]ピストル[/BR]てき,てきへい,ほへい[/COM]敵,敵兵,歩兵[" +
            "/BR]したい[/COM]死体[/BR]くるま[/COM]車[/BR]トラック[/COM]トラック[/BR]きゅうごしゃ,きゅうご[/COM]救護,救護車[/B" +
            "R]しきしゃ,エイチキュー[/COM]指揮車,HQ[/BR]そうこうしゃ,エーピーシー[/COM]装甲車,エーピーシー[/BR]せんしゃ[/COM]戦車[/BR" +
            "]へり[/COM]ヘリコプター[/BR]せんとうへり[/COM]戦闘ヘリ[/BR]ひこうき,ジェット,せんとうき[/COM]飛行機[/BR]ボート,ふね[/CO" +
            "M]ボート,船[/BR]ぶんたい,ぶんたいきぼ[/COM]分隊,分隊規模[/BR]たいくう,たいくうへいき[/COM]対空,対空兵器[/BR]マシンガン[/CO" +
            "M]マシンガン,機関銃[/BR]ライフル[/COM]ライフル,小銃[/BR]ショットガン[/COM]ショットガン[/BR]グレネード[/COM]グレネード[/B" +
            "R]スモーク[/COM]スモーク[/BR]ブリーチ[/COM]ブリーチ[/BR]ラペリング,ラペ[/COM]ラペリング[/BR]フラグ[/COM]フラグ[/BR" +
            "]スタン[/COM]スタン[/BR]ドローン[/COM]ドローン[/BR]シールド[/COM]シールド[/BR]バリケード[/COM]バリケード[/BR]ニトロ" +
            "[/COM]ニトロ[/BR]テルミット[/COM]テルミット[/BR]キャッスル[/COM]キャッスル[/BR]グラズ[/COM]グラズ[/BR]フューズ[/C" +
            "OM]フューズ[/BR]クラスター[/COM]クラスター[/BR]スレッジ[/COM]スレッジ[/BR]ハンマー[/COM]ハンマー[/BR]ミュート[/COM" +
            "]ミュート[/BR]トゥイッチ[/COM]トゥイッチ[/BR]ショックドローン[/COM]ショックドローン[/BR]ドク[/COM]ドク[/BR]スティム[/C" +
            "OM]スティム[/BR]ルーク[/COM]ルーク[/BR]アーマー[/COM]アーマー[/BR]アッシュ[/COM]アッシュ[/BR]サッチャー[/COM]サッ" +
            "チャー[/BR]イーエムピー[/COM]イーエムピー[/BR]アイキュー[/COM]アイキュー[/BR]バンディット[/COM]バンディット[/BR]ショックワ" +
            "イヤ[/COM]ショックワイヤ[/BR]イェーガー[/COM]イェーガー[/BR]カプカン[/COM]カプカン[/BR]ワイヤー[/COM]ワイヤー[/BR]モ" +
            "ンターニュ,モンタ[/COM]モンターニュ[/BR]ブリッツ[/COM]ブリッツ[/BR]バック[/COM]バック[/BR]ブラックビアード,ブラビ[/COM]" +
            "ブラックビアード[/BR]カピタオ[/COM]カピタオ[/BR]ヒバナ[/COM]ヒバナ[/BR]ジャッカル[/COM]ジャッカル[/BR]パルス[/COM]パ" +
            "ルス[/BR]タチャンカ[/COM]タチャンカ[/BR]フロスト[/COM]フロスト[/BR]マット[/COM]マット[/BR]ヴァルキリー[/COM]ヴァルキ" +
            "リー[/BR]カベイラ[/COM]カベイラ[/BR]エコー,まさる[/COM]エコー[/BR]ミラ[/COM]ミラ[/BR]スナイパー[/COM]スナイパー[/" +
            "BR]メディック,メディ,メディコ,えいせいへい[/COM]メディック,衛生兵[/BR]ビーエムピー[/COM]ビーエムピー[/BR]シルカ[/COM]シルカ[" +
            "/BR]ビーティーアール[/COM]ビーティーアール[/BR]ビーアールディーエム[/COM]ビーアールディーエム[/BR]ユーエーゼット[/COM]ユーエーゼ" +
            "ット[/BR]ミリタリーオフロード[/COM]ミリタリーオフロード[/BR]ボドニク[/COM]ボドニク[/BR]ハインド[/COM]ハインド[/BR]カモフ[" +
            "/COM]カモフ[/BR]アパッチ[/COM]アパッチ[/BR]ユーエイチ[/COM]ユーエイチ[/BR]エムアイハチ[/COM]エムアイハチ[/BR]ゼットユ" +
            "ー[/COM]ゼットユー[/BR]エムワンエーワン[/COM]エムワンエーワン[/BR]エムワンエーツー[/COM]エムワンエーツー[/BR]ティーナナニー[/" +
            "COM]ティーナナニー[/BR]ティーゴーニー[/COM]ティーゴーニー[/BR]ヤバウラル[/COM]ヤバウラル[/BR]ウラル[/COM]ウラル[/BR]オ" +
            "スプレー[/COM]オスプレー[/BR]ストライカー[/COM]ストライカー[/BR]ハンヴィー[/COM]ハンヴィー[/BR]リトルバード[/COM]リトルバ" +
            "ード[/BR]アベンジャー[/COM]アベンジャー[/BR]タイヤ[/COM]タイヤ[/BR]エーテン[/COM]エーテン[/BR]スカッド[/COM]スカッド" +
            "[/BR]アイシービーエム[/COM]ICBM[/BR]ぐりーん,みどり[/COM]グリーン,みどり[/BR]れっど,あか[/COM]レッド,赤[/BR]イエロ" +
            "ー,きいろ[/COM]イエロー,黄色[/BR]オレンジ[/COM]オレンジ[/BR]ブルー,あお[/COM]ブルー,青[/BR]ひとり[/COM]一人[/BR]" +
            "ふたり[/COM]二人[/BR]さんにん[/COM]三人[/BR]よにん[/COM]四人[/BR]ごにん[/COM]五人[/BR]ろくにん[/COM]六人[/B" +
            "R]ななにん,しちにん[/COM]七人[/BR]はちにん[/COM]八人[/BR]くにん,きゅうにん[/COM]九人[/BR]じゅうにん[/COM]十人[/BR" +
            "]にさん[/COM]2,3[/BR]ごろく[/COM]5,6[/BR]はちく[/COM]8,9[/BR]ごじゅう[/COM]50[/BR]ひゃく[/COM]10" +
            "0[/BR]にひゃく[/COM]200[/BR]さんびゃく[/COM]300[/BR]よんひゃく[/COM]400[/BR]ごひゃく[/COM]500[/BR]" +
            "ろっぴゃく[/COM]600[/BR]ななひゃく[/COM]700[/BR]はっぴゃく[/COM]800[/BR]きゅうひゃく[/COM]900[/BR]メート" +
            "ル,メーター[/COM]メートル,メーター[/BR]ほうこう,ほうがく[/COM]方向,方角[/BR]きた,ノース[/COM]北,ノース[/BR]みなみ,サウス" +
            "[/COM]南,サウス[/BR]ひがし,イースト[/COM]東,イースト[/BR]にし,ウエスト[/COM]西,ウエスト[/BR]ほくとう,ノースイースト[/C" +
            "OM]北東,ノースイースト[/BR]ほくせい,ノースウエスト[/COM]北西,ノースウエスト[/BR]なんとう,サウスイースト,エスイー[/COM]南東,サウス" +
            "イースト[/BR]なんせい,サウスウエスト,エスダブリュー[/COM]南西,サウスウエスト[/BR]いちじ[/COM]一時[/BR]にじ[/COM]二時[/BR" +
            "]さんじ[/COM]三時[/BR]よじ[/COM]四時[/BR]ごじ[/COM]五時[/BR]ろくじ[/COM]六時[/BR]しちじ[/COM]七時[/BR]は" +
            "ちじ[/COM]八時[/BR]くじ[/COM]九時[/BR]じゅうじ[/COM]十時[/BR]じゅういちじ[/COM]十一時[/BR]じゅうにじ[/COM]十二" +
            "時[/BR]みちぞい[/COM]道沿い[/BR]みちなり[/COM]道なり[/BR]こうさてん[/COM]交差点[/BR]じゅうじろ[/COM]十字路[/BR]" +
            "てぃーじろ[/COM]ティー字路[/BR]さんさろ[/COM]三叉路[/BR]ラウンドアバウト[/COM]ラウンドアバウト[/BR]つきあたり[/COM]つきあ" +
            "たり[/BR]わきみち[/COM]脇道[/BR]うかい[/COM]迂回[/BR]おか[/COM]丘[/BR]やま[/COM]山[/BR]はやし[/COM]林[/" +
            "BR]かわ[/COM]川[/BR]うみ[/COM]海[/BR]き[/COM]木[/BR]ばすてい[/COM]バス停[/BR]さか[/COM]坂[/BR]しきちな" +
            "い[/COM]敷地内[/BR]ぶきこ[/COM]武器庫[/BR]しきじょ[/COM]指揮所[/BR]つうしんじょ[/COM]通信所[/BR]じもとみん,みんかん" +
            "じん[/COM]地元民,民間人[/BR]")]
        public string rcSetCommand {
            get {
                return ((string)(this["rcSetCommand"]));
            }
            set {
                this["rcSetCommand"] = value;
            }
        }
    }
}
